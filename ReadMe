dbcontext ekak haduma 
    eka inhert kare identityDbContext eken
        dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore
    use karanna package eka ganna
------------------------------------------------------------------------------------
DI eka register kara config service eke.
------------------------------------------------------------------------------------
Connection stiring eka haduwa 
    Db name eka wenas kara 
--------------------------------------------------------------------------------------
Application user ekak hadanawa identityuser inhert karala
        dotnet add package Microsoft.AspNetCore.Identity
    meka thamai use karana package eka. dbset eka gahala me class eken table ekak hadaganna
-------------------------------------------------------------------------------------
identity role ekak hadana eka thama karanne.ekata config ekata identity ekak add karana eka
karanawa.
        services.AddDefaultIdentity<ApplicationUser>()
                .AddEntityFrameworkStores<AuthenticationContext>();
    AddEntityFrameworkStores eka use karanne identity role eka implement karanna one hinda.
------------------------------------------------------------------------------------------------
dan karanne controller ekak hadala user sign in eke ewa pass karana eka 
ekata wenawa controller ekak hadala 
    Identity eken UserManager ekai SignInUserManagr ekai inject karanawa mokada eka service ekak 
    widihata use karala tinne dependancy injection widihata. mekata constructor dependancy injection 
    eka use karanawa.

meke hadanawa async function ekak sign wena ewa ganna.ita issella ewa allaganna hadanna one 
    model ekak eke nama ApplicationUserModel kiyala.eke apita one field tika implement karaganna puluwan.
    [HttpPost]
        [Route("Register")]
        //http://localhost:5000/api/ApplicationUser/Register
        
        public async Task<Object> PostApplicationUser (ApplicationUserModel applicationUserModel)
        {
               var applicationUser=new ApplicationUser(){
                UserName=applicationUserModel.UserName,
                Email=applicationUserModel.Email,
                FullName=applicationUserModel.FullName
            };
           
            try
            {
                var result=await _userManager.CreateAsync(applicationUser,applicationUserModel.Password);
                return Ok(result);
            }
            catch (Exception ex)
            {
                
                throw ex;
            }
        }
        //applicationUserModel eka identity table ekata add karaganna one hinda applicationUer
            //eken instance ekak hadala ekata applicationUserModel eke hadapuwa pass karanawa. 
        //identiy user eken hadanne eke inherit wenawane Identity user wa eke fieild tinawa 
                //ewata eliyen ganna apita one field tika hadaganna eka thama karanne.
            //dan hadagaththa eka _userManager ekata pass karanna one
    
    *meka hadala postman eken request karama validation error ekak enawa ekata hethuwa thama 
        IdentityUser eke defult eke eka thinawa.apita eka apita one widihata hadaganna puluwan
        ekata karanna one startup eka wenas karana eka.
------------------------------------------------------------------------------------------------------
validation apita one widihata hadaganna karanna one 
------------------------------------------------------------------------------------------------------
ANGULAR
    material eka add karanna 
        ng add @angular/material
    component add karanna
        ng g c user/registration 
        mekedi registration folder ekak hadanawa
    
    shareh forleder kak hadala service ekak hadana eka  
        ng g s shared/user
-----------------------------------------------------------------------------------------------------
forms hadana krama dekak tinawa ekak thama 
    reactive form 
    template form 
        hugak welawata use karanne reactive form
------------------------------------------------------------------------------------------------------
REACTIVE FORM 
    import karanawa 
        import { ReactiveFormsModule } from '@angular/forms';
    
    api service class eke form group ekak hadala karanne ita passe api eka inject karanawa 
    app.module.ts eken 

    service eke ctor eke 
        private fb:FormBuilder dala
    form ekata namak dala eka hadanna one.
    constructor(private fb:FormBuilder) { }

    formModel=this.fb.group({
        UserName:[''],
        Email:[''],
        FullName:[''],
        
        Password :this.fb.group({
        Password:[''],
        ConfirmPassword:['']
        })
    });

    meka use karanna one ne component eke eka hinda app.module wala tina providers array ekata 
    danawa.
        ita passe regcomponent.ts eken ctor eken service eka gannawa 
-------------------------------------------------------------------------------------------------------
PASSWORD MISMATCH 
    meka karanne service eke hadanama checkpassword kiyala method ekak pass karanawa formGroup eke object 
    ekak.ita passe if condition ekak dala password ekai ConfirmPassword password ekai check karanawa.
    
      Password:['',[Validators.required,Validators.minLength(4)]],
      ConfirmPassword:['',Validators.required]
    },{validators:this.checkPassword})

    
  
  });

  checkPassword(fbi:FormGroup){ //fbi kiyanne meke parameter ekak eka 
    let ConfirmPassword=fbi.get('ConfirmPassword');
    if (ConfirmPassword.errors==null || 'passwordMismatch' in ConfirmPassword.errors) {
      //erros deka naththam meke athulata enawa
      if (fbi.get('Password').value!=ConfirmPassword.value) {
        ConfirmPassword.setErrors({passwordMismatch:true});
      }
      else{
        ConfirmPassword.setErrors(null);
      }
      
    }

  }
  
}

meke balanna {validators:this.checkPassword} kiyala function ekak hadanawa ita passe function eka 
athule karanne passwordMismatch eka false krana eka password.value eka aragena
    ita passe eka inject karanna one ekata kranne ctor ekata private parameter ekak widihata add karana 
    eka.
        ewaguma app.module ekata module ekak widihata add karannath one.

-------------------------------------------------------------------------------------------------------
REGISTER 
    mekedi karanne function ekak hadana eka ekata module ekak import karanna one.
    ekata import statement ekak add karaganna one.
        import {HttpClient} from "@angular/common/http"; 
        -- meka thamai statement eka.
        value eka aragena
        ita passe eka inject karanna one ekata kranne ctor ekata private parameter ekak widihata add karana 
        eka.
        ewaguma app.module ekata module ekak widihata add karannath one.

        register(){
    var body={
      UserNamePt :this.formModel.value.UserName,
      EmailPt :this.formModel.value.Email,
      PasswordPt :this.formModel.value.Password,
      ConfirmPasswordPt :this.formModel.value.ConfirmPassword,
    }
        Usernamept kiyana propety eke thamai tinne value eka eka thmai pass karanna one 
        web api project ekata.
         return this.http.post(this.BaseUri+'/ApplicationUser/Register',body);
         meka liyanawa body ekata pahalin.
    ----------------------------------------------------------------------------------------------------------
    
  
    